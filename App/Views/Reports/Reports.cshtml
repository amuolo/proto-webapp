@using App.Extensions
@using Model.Enums
@using Model.Extensions
@using Model
@using Posting
@model Transaction

@{
    ViewData["Title"] = "Account Transaction Report";
}

<div class="evenly-distributed-children">
    <button class="button6" id="btnOverview" role="button" onclick="setOverview()"> Overview </button>
    <button class="button6" id="btnEarnings" role="button" onclick="setEarnings()"> Earnings </button>
    <button class="button6" id="btnExpenses" role="button" onclick="setExpenses()"> Expenses </button>
</div>

<br /><br />

<h4> @ViewData["Title"] </h4>

<h6 id="reportType"> </h6>

<br />

<table class="table" id="overviewReportTable" hidden>
    <thead>
        <tr>
            <th> User </th>
            <th> Earnings </th>
            <th> Expenses </th>
            <th> Balance </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="overviewReportTableBody"></tbody>
</table>

<table class="table" id="fullReportTable" hidden>
    <thead>
        <tr>
            <th> @Html.DisplayNameFor(model => model.TransactionDate) </th>
            <th> @Html.DisplayNameFor(model => model.SettlementDate) </th>
            <th> @Html.DisplayNameFor(model => model.User) </th>
            <th> @Html.DisplayNameFor(model => model.Currency) </th>
            <th> @Html.DisplayNameFor(model => model.Type) </th>
            <th> @Html.DisplayNameFor(model => model.Amount) </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="fullReportTableBody"></tbody>
</table>

<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script type="text/javascript">
    const Overview = "Overview";
    const Earnings = "Earnings";
    const Expenses = "Expenses";

    let connection = new signalR.HubConnectionBuilder().withUrl("/messageHub").build();

    connection.on("@(Contract.ReceiveMessage)", function (user, message) {
        if (message == "@(Contract.DataChanged)") {
            const reportType = document.getElementById("reportType").innerHTML;
            if (reportType == Overview) setOverview();
            else if (reportType == Earnings) setEarnings();
            else if (reportType == Expenses) setExpenses();
        }
    });

    $(document).ready(function () {
        setOverview();

        connection.start().then(function () {
        }).catch(function (err) {
            return alert(err.toString());
        });
    })

    function setOverview() {
        $.ajax({
            type: "GET",
            url: "/Transactions/Overview",
            dataType: "json",
            async: true,
            cache: false,
            success: function (data) {
                document.getElementById("reportType").innerHTML = "Overview";
                document.getElementById("overviewReportTable").hidden = false;
                document.getElementById("fullReportTable").hidden = true;
                const table = document.getElementById("overviewReportTableBody");
                table.innerHTML = "";
                $.each(data, function (id, item) {
                    let row = table.insertRow();
                    row.insertCell(0).innerHTML = item.User;
                    row.insertCell(1).innerHTML = item.Earnings;
                    row.insertCell(2).innerHTML = item.Expenses;
                    row.insertCell(3).innerHTML = item.Balance;
                });
            },
            error: function (req, status, error) {
                alert(error.msg);
            }
        });
    };

    function fillTable(data) {
        document.getElementById("overviewReportTable").hidden = true;
        document.getElementById("fullReportTable").hidden = false;
        const table = document.getElementById("fullReportTableBody");
        table.innerHTML = "";
        const currencies = @(Html.EnumToString<Currency>());
        const types = @(Html.EnumToString<TransactionType>());
        $.each(data, function (id, item) {
            let row = table.insertRow();
            row.insertCell(0).innerHTML = item.TransactionDate;
            row.insertCell(1).innerHTML = item.SettlementDate;
            row.insertCell(2).innerHTML = item.User;
            row.insertCell(3).innerHTML = currencies[item.Currency];
            row.insertCell(4).innerHTML = types[item.Type];
            row.insertCell(5).innerHTML = item.Amount;
        });
    }

    function setEarnings() {
        $.ajax({
            type: "GET",
            url: "/Transactions/Earnings",
            dataType: "json",
            async: true,
            cache: false,
            success: function (data) {
                document.getElementById("reportType").innerHTML = "Earnings";
                fillTable(data);
            },
            error: function (req, status, error) {
                alert(error.msg);
            }
        });
    };

    function setExpenses() {
        $.ajax({
            type: "GET",
            url: "/Transactions/Expenses",
            dataType: "json",
            async: true,
            cache: false,
            success: function (data) {
                document.getElementById("reportType").innerHTML = "Expenses";
                fillTable(data);
            },
            error: function (req, status, error) {
                alert(error.msg);
            }
        });
    };
</script>



